[user]
	name = Andrew Hurle
	email = fracture91@gmail.com
[core]
	autocrlf = input
	mergeoptions = --no-commit
[merge]

[alias]
	puo = push -u origin
	f = fetch
	c = checkout
	cb = checkout -b
	back = checkout -
	d = diff
	s = status
	rc = rebase --continue
	fff = !git fetch && git ff
	mfff = !git checkout master && git fff && git back
	find = log -S # append search term to find in diff - plus "-p" if you want to show diffs
	# show commits from previous head onwards (good after fetch)
	lc = log ORIG_HEAD.. --stat --no-merges
	# fast forward to remote branch
	ff = !branch=$(git symbolic-ref HEAD | sed s:refs/heads/::) && rbranch=$(git config --get branch.$branch.merge | sed s:refs/heads/::) && git merge --ff-only $(git config --get branch.$branch.remote)/$rbranch
	# intercommit old new - show the interdiff between two commits.  Requires patchutils.
	intercommit = !sh -c 'git show "$1" > .git/commit1 && git show "$2" > .git/commit2 && interdiff .git/commit[12] | less -FRSX' -
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit
	# show all local branches in chronological order
	branch-date = "!bash -c 'for k in `git branch | sed s/^..//`; do echo -e `git log -1 --pretty=format:\"%Cgreen%ci %Cblue%cr%Creset\" $k --`\\\t\"$k\";done | sort -r'"

[push]
	default = current
